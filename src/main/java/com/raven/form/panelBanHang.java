/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.raven.form;

import com.raven.component.Menu;
import com.raven.main.Main;
import domainmodels.ChiTietSp;
import domainmodels.Cthd;
import domainmodels.DongSp;
import domainmodels.HoaDon;
import domainmodels.KhachHang;
import domainmodels.Nsx;
import domainmodels.User;
import domainmodels.VoucherHd;
import java.awt.Button;
import java.awt.Component;
import java.awt.Image;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;
import responsitory.ChiTietSPRespository;
import responsitory.HDCTRespository;
import responsitory.HDRespository;
import responsitory.KhachHangResponsitory;
import responsitory.NhanVienRespository;
import responsitory.SerialsResponsitory;
import responsitory.impl.ChiTietSPRespositoyImpl;
import responsitory.impl.HDCTRespositoryImpl;
import responsitory.impl.HDRespositoryImpl;
import responsitory.impl.KhachHangResponsitoryImpl;
import responsitory.impl.NhanVienRespositoryImpl;
import responsitory.impl.SerialsResponsitoryImpl;
import services.KhuyenMaiHoaDonService;
import services.KhuyenMaiSanPhamService;
import services.SellService;
import services.impl.KhuyenMaiHoaDonServiceImpl;
import services.impl.KhuyenMaiSanPhamServiceImpl;
import services.impl.SellServiceImpl;

/**
 *
 * @author longv
 */
public class panelBanHang extends javax.swing.JPanel {

    private final Main mainWindow;
    private final Menu mainMenu;
    private final ChiTietSPRespository chiTietSPRespository = new ChiTietSPRespositoyImpl();
    private final HDCTRespository chiTietHDRespository = new HDCTRespositoryImpl();
    private final HDRespository HDRespository = new HDRespositoryImpl();
    private final NhanVienRespository nhanVienRespository = new NhanVienRespositoryImpl();
    private final KhachHangResponsitory khachHangResponsitory = new KhachHangResponsitoryImpl();
    private final SerialsResponsitory serialsResponsitory = new SerialsResponsitoryImpl();
    SellService sv = new SellServiceImpl(chiTietSPRespository, chiTietHDRespository, HDRespository, nhanVienRespository, khachHangResponsitory, serialsResponsitory);
    KhuyenMaiHoaDonService srVHD = new KhuyenMaiHoaDonServiceImpl();
    KhuyenMaiSanPhamService srVSP = new KhuyenMaiSanPhamServiceImpl();
    static int rollnumber = 1;
    static double thanhTien = 0;
    static long t = 0;
    List<HoaDon> listHDC = sv.getAllHDC();
    List<Nsx> listNSX = sv.getAllNSX();
    List<DongSp> listDSP = sv.getAllDSP();
    List<VoucherHd> listVC = srVHD.getAll();
    User user;
    private List<KhachHang> listKH = sv.getAllKH();
    List<ChiTietSp> listSP = sv.getAllSP();
    static List<ChiTietSp> listSelectedSp = new ArrayList<>();
    List<ChiTietSp> listFind = new ArrayList<>();
    static HoaDon HDCnow;

    /**
     * Creates new form panelBanHang
     */
    public panelBanHang(Main frame, Menu menu1) {
        initComponents();
        mainWindow = frame;
        mainMenu = menu1;
        setOpaque(false);
        user = frame.User();
        panelBanHang.rollnumber = 1;
        listSP.forEach(e -> sv.updateSLSP(e.getId()));
        loadNSX();
        loadDSP();
        loadKH();
        loadVoucher();
        fillSP(listSP = sv.getAllSP());
        fillHDC();
        txt_nhanVien.setText(user.getTen());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        roundPanel1 = new com.raven.swing.RoundPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_ChiTietHD = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        roundPanel2 = new com.raven.swing.RoundPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_chiTietSP = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        txt_timKiem = new javax.swing.JTextField();
        cbo_NSX = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cbo_NhuCau = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        btn_hd = new javax.swing.JButton();
        roundPanel3 = new com.raven.swing.RoundPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_hdc = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cbo_kh = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_nhanVien = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        rdo_store = new javax.swing.JRadioButton();
        rdo_ship = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txt_diachi = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        txt_khachTra = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_sdtnguoiNhan = new javax.swing.JTextField();
        cbo_voucher = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lbl_tongtien = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_trangthai = new javax.swing.JLabel();
        btn_thanhtoan = new javax.swing.JButton();
        btn_GiaoHang = new javax.swing.JButton();
        txt_tong = new javax.swing.JLabel();
        txt_nguoiNhan = new javax.swing.JTextField();
        btn_save = new javax.swing.JButton();
        trangthaitien = new javax.swing.JLabel();
        lbl_thieu = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jdc_NgayVanChuyen = new com.toedter.calendar.JDateChooser();
        btn_giaoHang = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txt_maHD = new javax.swing.JLabel();
        txt_outputtrangthai = new javax.swing.JLabel();
        txt_giamGia = new javax.swing.JLabel();
        txt_trangthai1 = new javax.swing.JLabel();
        txt_trangthai2 = new javax.swing.JLabel();
        txt_trangthai3 = new javax.swing.JLabel();
        txt_trangthai4 = new javax.swing.JLabel();

        setName(""); // NOI18N
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1550, 925));

        roundPanel1.setBackground(new java.awt.Color(51, 51, 51));
        roundPanel1.setPreferredSize(new java.awt.Dimension(1080, 300));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(220, 220, 220));
        jLabel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(220, 220, 220));
        jLabel7.setText("Giỏ Hàng");
        jLabel7.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        tbl_ChiTietHD.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tbl_ChiTietHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã SP", "Tên SP", "Số Lượng", "Đơn Giá", "Thành Tiền", "Chọn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_ChiTietHD.setRowHeight(32);
        tbl_ChiTietHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_ChiTietHDMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tbl_ChiTietHD);

        jButton3.setText("Bỏ toàn bộ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roundPanel1Layout = new javax.swing.GroupLayout(roundPanel1);
        roundPanel1.setLayout(roundPanel1Layout);
        roundPanel1Layout.setHorizontalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addGroup(roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundPanel1Layout.createSequentialGroup()
                        .addGap(488, 488, 488)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE))
                    .addGroup(roundPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(roundPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton3)
                                .addGap(41, 41, 41)))))
                .addContainerGap())
        );
        roundPanel1Layout.setVerticalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        roundPanel2.setBackground(new java.awt.Color(51, 51, 51));
        roundPanel2.setPreferredSize(new java.awt.Dimension(1080, 600));

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(220, 220, 220));
        jLabel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        tbl_chiTietSP.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 102, 255)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        tbl_chiTietSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã SP", "Tên SP", "Năm Sản Xuất", "Mô Tả", "Năm BH", "SL SP", "Giá Bán", "Ảnh"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_chiTietSP.setOpaque(false);
        tbl_chiTietSP.setRowHeight(62);
        tbl_chiTietSP.setSelectionBackground(new java.awt.Color(255, 153, 255));
        tbl_chiTietSP.setSelectionForeground(new java.awt.Color(51, 51, 51));
        tbl_chiTietSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_chiTietSPMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbl_chiTietSP);

        jLabel19.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(220, 220, 220));
        jLabel19.setText("Tìm kiếm sản phẩm:");
        jLabel19.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_timKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_timKiemActionPerformed(evt);
            }
        });
        txt_timKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_timKiemKeyReleased(evt);
            }
        });

        cbo_NSX.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cbo_NSX.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbo_NSXMouseClicked(evt);
            }
        });
        cbo_NSX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_NSXActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("sansserif", 1, 15)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(220, 220, 220));
        jLabel16.setText("Sản Phẩm");
        jLabel16.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        jLabel20.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(220, 220, 220));
        jLabel20.setText("NSX");
        jLabel20.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        jLabel21.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(220, 220, 220));
        jLabel21.setText("Nhu Cầu");
        jLabel21.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        cbo_NhuCau.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cbo_NhuCau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_NhuCauActionPerformed(evt);
            }
        });

        jButton5.setText("Giá tăng");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Giá Giảm");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        btn_hd.setText("Danh Sách Hóa Đơn");
        btn_hd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roundPanel2Layout = new javax.swing.GroupLayout(roundPanel2);
        roundPanel2.setLayout(roundPanel2Layout);
        roundPanel2Layout.setHorizontalGroup(
            roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel2Layout.createSequentialGroup()
                .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roundPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(roundPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20)
                        .addGap(36, 36, 36)
                        .addComponent(cbo_NSX, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(roundPanel2Layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addGap(18, 18, 18)
                                .addComponent(jButton6))
                            .addComponent(cbo_NhuCau, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_hd)))
                .addContainerGap())
        );
        roundPanel2Layout.setVerticalGroup(
            roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbo_NSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21)
                        .addComponent(cbo_NhuCau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20)
                        .addComponent(btn_hd)))
                .addGap(18, 18, 18)
                .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        roundPanel3.setBackground(new java.awt.Color(51, 51, 51));
        roundPanel3.setPreferredSize(new java.awt.Dimension(400, 900));

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(220, 220, 220));
        jLabel3.setText("Thiết Lập Thông Tin Hóa Đơn");
        jLabel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        tbl_hdc.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tbl_hdc.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        tbl_hdc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hóa Đơn Chờ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_hdc.setOpaque(false);
        tbl_hdc.setRowHeight(80);
        tbl_hdc.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                tbl_hdcMouseWheelMoved(evt);
            }
        });
        tbl_hdc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_hdcMouseClicked(evt);
            }
        });
        tbl_hdc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbl_hdcKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tbl_hdcKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_hdc);
        if (tbl_hdc.getColumnModel().getColumnCount() > 0) {
            tbl_hdc.getColumnModel().getColumn(0).setResizable(false);
        }

        jButton1.setText("Tạo Hóa Đơn");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(220, 220, 220));
        jLabel4.setText("Khách Hàng :");
        jLabel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        cbo_kh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbo_kh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_khActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/customer.png"))); // NOI18N
        jButton2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 204, 153)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(220, 220, 220));
        jLabel5.setText("Nhân Viên :");
        jLabel5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_nhanVien.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        txt_nhanVien.setForeground(new java.awt.Color(220, 220, 220));
        txt_nhanVien.setText("Nhân Viên");
        txt_nhanVien.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        jLabel8.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(220, 220, 220));
        jLabel8.setText("Người nhận :");
        jLabel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        jLabel9.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(220, 220, 220));
        jLabel9.setText("Nhận Hàng :");
        jLabel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        buttonGroup1.add(rdo_store);
        rdo_store.setForeground(new java.awt.Color(255, 255, 255));
        rdo_store.setSelected(true);
        rdo_store.setText("Tại cửa hàng");
        rdo_store.setOpaque(false);
        rdo_store.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdo_storeMouseClicked(evt);
            }
        });
        rdo_store.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdo_storeActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdo_ship);
        rdo_ship.setForeground(new java.awt.Color(255, 255, 255));
        rdo_ship.setText("Vận Chuyển");
        rdo_ship.setOpaque(false);
        rdo_ship.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdo_shipStateChanged(evt);
            }
        });
        rdo_ship.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdo_shipMouseClicked(evt);
            }
        });
        rdo_ship.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdo_shipActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(220, 220, 220));
        jLabel10.setText("Địa chỉ :");
        jLabel10.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_diachi.setColumns(20);
        txt_diachi.setRows(5);
        txt_diachi.setText("tại cửa hàng");
        txt_diachi.setEnabled(false);
        jScrollPane5.setViewportView(txt_diachi);

        jLabel12.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(220, 220, 220));
        jLabel12.setText("SĐT người nhận:");
        jLabel12.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_khachTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_khachTraActionPerformed(evt);
            }
        });
        txt_khachTra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_khachTraKeyReleased(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(220, 220, 220));
        jLabel13.setText("Khách trả :");
        jLabel13.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_sdtnguoiNhan.setEnabled(false);

        cbo_voucher.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa áp dụng" }));
        cbo_voucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_voucherActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(220, 220, 220));
        jLabel14.setText("Voucher HĐ :");
        jLabel14.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        jLabel15.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(220, 220, 220));
        jLabel15.setText("Giảm giá :");
        jLabel15.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        lbl_tongtien.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lbl_tongtien.setForeground(new java.awt.Color(220, 220, 220));
        lbl_tongtien.setText("Tổng tiền hàng :");
        lbl_tongtien.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        jLabel17.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(220, 220, 220));
        jLabel17.setText("Khách cần trả :");
        jLabel17.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_trangthai.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txt_trangthai.setForeground(new java.awt.Color(220, 220, 220));
        txt_trangthai.setText("Trạng thái : ");
        txt_trangthai.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        btn_thanhtoan.setBackground(new java.awt.Color(255, 204, 204));
        btn_thanhtoan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/sell-48.png"))); // NOI18N
        btn_thanhtoan.setBorder(null);
        btn_thanhtoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_thanhtoanActionPerformed(evt);
            }
        });

        btn_GiaoHang.setBackground(new java.awt.Color(255, 204, 204));
        btn_GiaoHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/blank-file-48.png"))); // NOI18N
        btn_GiaoHang.setBorder(null);
        btn_GiaoHang.setOpaque(false);
        btn_GiaoHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_GiaoHangActionPerformed(evt);
            }
        });

        txt_tong.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txt_tong.setForeground(new java.awt.Color(220, 220, 220));
        txt_tong.setText("0.0");
        txt_tong.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_nguoiNhan.setEnabled(false);

        btn_save.setBackground(new java.awt.Color(255, 204, 204));
        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/save-as-48.png"))); // NOI18N
        btn_save.setBorder(null);
        btn_save.setOpaque(false);
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        trangthaitien.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        trangthaitien.setForeground(new java.awt.Color(220, 220, 220));
        trangthaitien.setText("Còn Thiếu");
        trangthaitien.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        lbl_thieu.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lbl_thieu.setForeground(new java.awt.Color(220, 220, 220));
        lbl_thieu.setText("0.0");
        lbl_thieu.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        jLabel18.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(220, 220, 220));
        jLabel18.setText("Ngày vận chuyển :");
        jLabel18.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        jdc_NgayVanChuyen.setDate(new Date(System.currentTimeMillis())
        );
        jdc_NgayVanChuyen.setEnabled(false);
        jdc_NgayVanChuyen.setFocusCycleRoot(true);

        btn_giaoHang.setBackground(new java.awt.Color(255, 204, 204));
        btn_giaoHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/delivery-48.png"))); // NOI18N
        btn_giaoHang.setBorder(null);
        btn_giaoHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_giaoHangActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(220, 220, 220));
        jLabel11.setText("Mã Hóa Đơn:");
        jLabel11.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_maHD.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        txt_maHD.setForeground(new java.awt.Color(220, 220, 220));
        txt_maHD.setText("Chưa chọn hóa đơn");
        txt_maHD.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_outputtrangthai.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txt_outputtrangthai.setForeground(new java.awt.Color(220, 220, 220));
        txt_outputtrangthai.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_giamGia.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txt_giamGia.setForeground(new java.awt.Color(220, 220, 220));
        txt_giamGia.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_trangthai1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txt_trangthai1.setForeground(new java.awt.Color(220, 220, 220));
        txt_trangthai1.setText("Thanh Toán");
        txt_trangthai1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_trangthai2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txt_trangthai2.setForeground(new java.awt.Color(220, 220, 220));
        txt_trangthai2.setText("Lưu hóa đơn");
        txt_trangthai2.setAlignmentX(0.5F);
        txt_trangthai2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_trangthai3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txt_trangthai3.setForeground(new java.awt.Color(220, 220, 220));
        txt_trangthai3.setText("Vận chuyển");
        txt_trangthai3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        txt_trangthai4.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txt_trangthai4.setForeground(new java.awt.Color(220, 220, 220));
        txt_trangthai4.setText("Làm mới");
        txt_trangthai4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        javax.swing.GroupLayout roundPanel3Layout = new javax.swing.GroupLayout(roundPanel3);
        roundPanel3.setLayout(roundPanel3Layout);
        roundPanel3Layout.setHorizontalGroup(
            roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundPanel3Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(27, 438, Short.MAX_VALUE))
                    .addGroup(roundPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(roundPanel3Layout.createSequentialGroup()
                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundPanel3Layout.createSequentialGroup()
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roundPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(txt_giamGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roundPanel3Layout.createSequentialGroup()
                                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel14)
                                        .addGroup(roundPanel3Layout.createSequentialGroup()
                                            .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel18)
                                                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel8)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(txt_nguoiNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txt_sdtnguoiNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jdc_NgayVanChuyen, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel3Layout.createSequentialGroup()
                                            .addComponent(jLabel13)
                                            .addGap(49, 49, 49)
                                            .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txt_khachTra, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(cbo_voucher, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(1, 1, 1)))
                                    .addComponent(lbl_tongtien)
                                    .addGroup(roundPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_tong))
                                    .addGroup(roundPanel3Layout.createSequentialGroup()
                                        .addComponent(trangthaitien)
                                        .addGap(18, 18, 18)
                                        .addComponent(lbl_thieu))
                                    .addGroup(roundPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(roundPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_maHD, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(roundPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_nhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(roundPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdo_store, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rdo_ship, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roundPanel3Layout.createSequentialGroup()
                                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roundPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cbo_kh, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roundPanel3Layout.createSequentialGroup()
                                        .addComponent(txt_trangthai)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_outputtrangthai, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(roundPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_trangthai1)
                            .addComponent(btn_thanhtoan, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(roundPanel3Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(txt_trangthai2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel3Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_trangthai3)
                            .addComponent(btn_giaoHang, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel3Layout.createSequentialGroup()
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_GiaoHang, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_trangthai4))
                        .addGap(46, 46, 46))))
        );
        roundPanel3Layout.setVerticalGroup(
            roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundPanel3Layout.createSequentialGroup()
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(cbo_kh, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txt_maHD))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_nhanVien))
                        .addGap(18, 18, 18)
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(rdo_store)
                            .addComponent(rdo_ship))
                        .addGap(18, 18, 18)
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_nguoiNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_sdtnguoiNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdc_NgayVanChuyen, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbo_voucher, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_khachTra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_tongtien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_giamGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txt_tong))
                .addGap(7, 7, 7)
                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trangthaitien)
                    .addComponent(lbl_thieu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_outputtrangthai, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_trangthai))
                .addGap(45, 45, 45)
                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_GiaoHang, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_thanhtoan, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_giaoHang, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_trangthai1)
                    .addComponent(txt_trangthai2)
                    .addComponent(txt_trangthai3)
                    .addComponent(txt_trangthai4))
                .addGap(69, 69, 69))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(roundPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1052, Short.MAX_VALUE)
                    .addComponent(roundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1052, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(roundPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(roundPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(roundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(roundPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbo_khActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_khActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbo_khActionPerformed

    private void rdo_storeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdo_storeActionPerformed
        setEnabledFlase();
    }//GEN-LAST:event_rdo_storeActionPerformed

    private void rdo_shipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdo_shipActionPerformed
        setEnabledTrue();
    }//GEN-LAST:event_rdo_shipActionPerformed

    private void cbo_voucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_voucherActionPerformed

        updateMoney();
    }//GEN-LAST:event_cbo_voucherActionPerformed

    private void tbl_chiTietSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_chiTietSPMouseClicked

        if (getSelectedHDCRow() < 0) {
            return;
        }
        if (getSelectedHDC().getTinhTrang() != 0) {
            return;
        }
        fillSPtoHDCT();
    }//GEN-LAST:event_tbl_chiTietSPMouseClicked

    private void cbo_NSXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_NSXActionPerformed
        productFind();
    }//GEN-LAST:event_cbo_NSXActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (sv.addHD()) {
            JOptionPane.showMessageDialog(this, "Thành công");
            this.fillHDC();
        } else {
            JOptionPane.showMessageDialog(this, "Mã hóa đơn đã tồn tại");
        }
        clearForm();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tbl_hdcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_hdcMouseClicked
        if (getSelectedHDCRow() < 0) {
            return;
        }
        clearForm();
        HoaDon hoaDonn = getSelectedHDC();
        txt_outputtrangthai.setText(getTinhTrang(hoaDonn.getTinhTrang()));
        txt_maHD.setText(hoaDonn.getId());
        if (hoaDonn.getTinhTrang() == 4) {
            int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Đơn hàng đã giao thành công bạn có muốn hoàn tất hóa đơn?", "Hóa đơn đang vận chuyển", JOptionPane.OK_CANCEL_OPTION);
            if (showConfirmDialog == 0) {
                hoaDonn.setTinhTrang(1);
                hoaDonn.setTenNguoiNhan(hoaDonn.getKhachHang().getTen());
                hoaDonn.setNgayThanhToan(new Date(System.currentTimeMillis()));
                hoaDonn.setNgayNhan(new Date(System.currentTimeMillis()));
                hoaDonn.setSdt(hoaDonn.getKhachHang().getSdt());
                if (sv.updateHDShipDone(hoaDonn)) {
                    JOptionPane.showMessageDialog(this, "Thanh Cong");
                    fillHDC();
                } else {
                    JOptionPane.showMessageDialog(this, "that bai");
                }
                //GUI mail hoa don cho khach
            }
            clearForm();
            tbl_hdc.getSelectionModel().clearSelection();
            return;
        }
        if (hoaDonn.getTinhTrang() == 3) {
            int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Bạn có muốn thiện thông tin vận chuyển ?", "Hóa đơn trạng thái chờ vận chuyển", JOptionPane.OK_CANCEL_OPTION);
            if (showConfirmDialog == 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập thông tin người vận chuyển");
                fillTextField();
                txt_diachi.setText(hoaDonn.getDiaChi());
                fillHDCT(hoaDonn);
                return;
            } else {
                clearForm();
                tbl_hdc.getSelectionModel().clearSelection();
                return;
            }
        }
        if (hoaDonn.getTinhTrang() == 2) {
            fillTextField();
            fillHDCT(hoaDonn);
        }
    }//GEN-LAST:event_tbl_hdcMouseClicked

    private void btn_GiaoHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_GiaoHangActionPerformed
        clearForm();
        tbl_hdc.getSelectionModel().clearSelection();
    }//GEN-LAST:event_btn_GiaoHangActionPerformed

    private void btn_thanhtoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_thanhtoanActionPerformed
        if (getSelectedHDCRow() < 0) {
            JOptionPane.showMessageDialog(this, "Hãy chọn hóa đơn");
            return;
        }
        if (cbo_kh.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(this, "Hãy chọn thông tin khách hàng");
            return;
        }

        HoaDon hoaDonn = getSelectedHDC();
        int tinhTrang = hoaDonn.getTinhTrang();
        if (tinhTrang == 3 || tinhTrang == 4) {
            JOptionPane.showMessageDialog(this, "Không thể thực hiện với hóa đơn đang chờ vận chuyển hoặc đang vận chuyển");
            return;
        }
        if (tinhTrang == 0 && listSelectedSp.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm");
            return;
        }
        if (rdo_ship.isSelected()) {
            JOptionPane.showMessageDialog(this, "Hóa đơn vận chuyển,chuyển sang trạng thái chờ vận chuyển?");
            hoaDonn.setUser(user);
            hoaDonn.setKhachHang((KhachHang) cbo_kh.getSelectedItem());
            hoaDonn.setVoucherHd(getSelectedVC());
            hoaDonn.setDiaChi(txt_diachi.getText());
            for (int i = 0; i < listSelectedSp.size(); i++) {
                ChiTietSp sp = listSelectedSp.get(i);
                String idCTHD = hoaDonn.getId() + "-" + String.valueOf(i + 1);
        Cthd hdct = new Cthd(idCTHD, sp, hoaDonn, Integer.valueOf(tbl_ChiTietHD.getValueAt(i, 3).toString()), sp.getGiaBan(), BigDecimal.valueOf((double) tbl_ChiTietHD.getValueAt(i, 4)), BigDecimal.valueOf((double) tbl_ChiTietHD.getValueAt(i, 5)));
                if (sv.addHDCT(hdct)) {
                    System.out.println("added : " + hdct.toString());
                }
                sv.updateSerials(hdct);
                sv.updateSLSP(sp.getId());
                fillSP(listSP = sv.getAllSP());
            }
            hoaDonn.setTinhTrang(3);
            if (sv.updateHDSave(hoaDonn)) {
                JOptionPane.showMessageDialog(this, "Thanh Cong");
                fillHDC();
                clearForm();
            } else {
                JOptionPane.showMessageDialog(this, "that bai");
            }
            return;
        }
        try {
            Double.valueOf(txt_khachTra.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nhập đúng giá tiền");
            return;
        }
        if (Long.valueOf(txt_khachTra.getText()) >= t) {
            hoaDonn.setUser(user); //nhan vien dang su dung
            hoaDonn.setKhachHang((KhachHang) cbo_kh.getSelectedItem());
            hoaDonn.setDiaChi(txt_diachi.getText());
            hoaDonn.setVoucherHd(getSelectedVC());
            for (int i = 0; i < listSelectedSp.size(); i++) {
                ChiTietSp sp = listSelectedSp.get(i);
                String idCTHD = hoaDonn.getId() + "-" + String.valueOf(i + 1);
                System.out.println(idCTHD);
                Cthd hdct = new Cthd(idCTHD, sp, hoaDonn, Integer.valueOf(tbl_ChiTietHD.getValueAt(i, 3).toString()), sp.getGiaBan(), BigDecimal.valueOf((double) tbl_ChiTietHD.getValueAt(i, 4)), BigDecimal.valueOf((double) tbl_ChiTietHD.getValueAt(i, 5)));
                if (sv.addHDCT(hdct)) {
                    System.out.println("added : " + hdct.toString());
                }
                sv.updateSerials(hdct);
                sv.updateSLSP(sp.getId());
                fillSP(listSP = sv.getAllSP());
            }

            hoaDonn.setTongTien(BigDecimal.valueOf(t));
            System.out.println(BigDecimal.valueOf(t));
            hoaDonn.setTinhTrang(1);
            hoaDonn.setNgayThanhToan(new java.sql.Date(System.currentTimeMillis()));
        } else {
            hoaDonn.setTinhTrang(0);
            JOptionPane.showMessageDialog(this, "Giao dịch thất bại do chưa nhập đủ tiền!");
            return;
        }
        if (sv.updateHDTT(hoaDonn)) {

            int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Thanh toán thành công bạn có muốn xuất hóa đơn", "Thanh toán thành công", JOptionPane.OK_CANCEL_OPTION);
            if (showConfirmDialog == 0) {
                for (HoaDon hoaDon : sv.getAllHD()) {
                    if (hoaDon.getId().equalsIgnoreCase(hoaDonn.getId())) {
                        new testIn(hoaDon).setVisible(true);
                        break;
                    }
                }
            }
            listKH.forEach(e -> sv.updateLoaiKH(e.getId()));
        } else {
            JOptionPane.showMessageDialog(this, "Thanh toán thất bại");
        }
        this.clearForm();
        this.fillHDC();


    }//GEN-LAST:event_btn_thanhtoanActionPerformed

    private void rdo_storeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdo_storeMouseClicked
        setEnabledFlase();
    }//GEN-LAST:event_rdo_storeMouseClicked
    private void setEnabledFlase() {

        txt_diachi.setEnabled(false);
        txt_diachi.setText("tại cửa hàng");
        txt_sdtnguoiNhan.setEnabled(false);
        txt_nguoiNhan.setEnabled(false);
        jdc_NgayVanChuyen.setEnabled(false);
    }
    private void rdo_shipMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdo_shipMouseClicked
        setEnabledTrue();
    }//GEN-LAST:event_rdo_shipMouseClicked
    private void setEnabledTrue() {
        txt_diachi.setEnabled(true);
        txt_diachi.setText("");
        txt_sdtnguoiNhan.setEnabled(true);
        txt_nguoiNhan.setEnabled(true);
        jdc_NgayVanChuyen.setEnabled(true);
    }
    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        if (getSelectedHDCRow() < 0) {
            JOptionPane.showMessageDialog(this, "Hãy chọn 1 hóa đơn");
            return;
        }
        HoaDon hoaDonn = getSelectedHDC();
        if (hoaDonn.getTinhTrang() != 0) {
            JOptionPane.showMessageDialog(this, "Không thể lưu hóa đơn ở trạng thái chờ thanh toán hoặc vận chuyển");
            return;
        }
        if (listSelectedSp.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Hãy Chọn sản phẩm");
            return;
        }
        if (rdo_store.isSelected()) {
            hoaDonn.setUser(user);
            hoaDonn.setKhachHang((KhachHang) cbo_kh.getSelectedItem());
            hoaDonn.setDiaChi(txt_diachi.getText());
            for (int i = 0; i < listSelectedSp.size(); i++) {
                ChiTietSp sp = listSelectedSp.get(i);
                String idCTHD = hoaDonn.getId() + "-" + String.valueOf(i + 1);
                System.out.println(idCTHD);
                Cthd hdct = new Cthd(idCTHD, sp, hoaDonn, Integer.valueOf(tbl_ChiTietHD.getValueAt(i, 3).toString()), sp.getGiaBan(), BigDecimal.valueOf((double) tbl_ChiTietHD.getValueAt(i, 4)), BigDecimal.valueOf((double) tbl_ChiTietHD.getValueAt(i, 5)));
                if (sv.addHDCT(hdct)) {
                    System.out.println("added : " + hdct.toString());
                }
                sv.updateSerials(hdct);
                sv.updateSLSP(sp.getId());
                fillSP(listSP = sv.getAllSP());
            }
            hoaDonn.setTinhTrang(2);
            if (sv.updateHDSave(hoaDonn)) {
                JOptionPane.showMessageDialog(this, "Thanh Cong");
            } else {
                JOptionPane.showMessageDialog(this, "that bai");
            }
        }
        if (rdo_ship.isSelected()) {
            JOptionPane.showMessageDialog(this, "Hóa đơn vận chuyển,chuyển sang trạng thái chờ vận chuyển?");
            hoaDonn.setUser(user);
            hoaDonn.setKhachHang((KhachHang) cbo_kh.getSelectedItem());
            hoaDonn.setDiaChi(txt_diachi.getText());
            for (int i = 0; i < listSelectedSp.size(); i++) {
                ChiTietSp sp = listSelectedSp.get(i);
                String idCTHD = hoaDonn.getId() + "-" + String.valueOf(i + 1);
                System.out.println(idCTHD);
                Cthd hdct = new Cthd(idCTHD, sp, hoaDonn, Integer.valueOf(tbl_ChiTietHD.getValueAt(i, 3).toString()), sp.getGiaBan(), BigDecimal.valueOf((double) tbl_ChiTietHD.getValueAt(i, 4)), BigDecimal.valueOf((double) tbl_ChiTietHD.getValueAt(i, 5)));
                if (sv.addHDCT(hdct)) {
                    System.out.println("added : " + hdct.toString());
                }
                sv.updateSerials(hdct);
                sv.updateSLSP(sp.getId());
                fillSP(listSP = sv.getAllSP());
            }
            hoaDonn.setTinhTrang(3);
            if (sv.updateHDSave(hoaDonn)) {
                JOptionPane.showMessageDialog(this, "Thanh Cong");
                fillHDC();
            } else {
                JOptionPane.showMessageDialog(this, "that bai");
            }
            return;
        }
        this.clearForm();
        this.fillHDC();
    }//GEN-LAST:event_btn_saveActionPerformed

    private void tbl_ChiTietHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_ChiTietHDMouseClicked

        if (listSelectedSp.isEmpty() || getSelectedHDC().getTinhTrang() != 0) {
            return;
        }
        int selectedRow = getSelectedCTHDRow();
        ChiTietSp chiTietSp = listSelectedSp.get(selectedRow);
        DefaultTableModel dtm = (DefaultTableModel) tbl_ChiTietHD.getModel();
        if ((boolean) dtm.getValueAt(selectedRow, 6) == false) {
            dtm.removeRow(selectedRow);
            listSelectedSp.remove(chiTietSp);
            updateMoney();
        }
        if (selectedRow <= -1) {
            return;
        }
        System.out.println("selected row " + selectedRow);
        updateMoney();
    }//GEN-LAST:event_tbl_ChiTietHDMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String showInputDialog = JOptionPane.showInputDialog("Mời nhập số điện thoại khách hàng cần tìm.");
        int flag = 0;
        if (showInputDialog.isEmpty()) {
            return;
        }
        for (KhachHang khachHang : listKH) {
            if (khachHang.getSdt().equalsIgnoreCase(showInputDialog)) {
                cbo_kh.getModel().setSelectedItem(khachHang);
                JOptionPane.showMessageDialog(this, "tìm thấy khách hàng : " + khachHang.getTen());
                flag++;
                break;
            }
        }
        if (flag == 0) {
            int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Bạn có muốn tạo hồ sơ khách hàng?", "Tìm kiếm khách hàng", JOptionPane.OK_CANCEL_OPTION);
            if (showConfirmDialog == 0) {
                mainWindow.showKH();
                mainMenu.setSelectedKH();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tbl_hdcKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl_hdcKeyTyped
    }//GEN-LAST:event_tbl_hdcKeyTyped

    private void tbl_hdcMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_tbl_hdcMouseWheelMoved

    }//GEN-LAST:event_tbl_hdcMouseWheelMoved

    private void cbo_NhuCauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_NhuCauActionPerformed
        productFind();
    }//GEN-LAST:event_cbo_NhuCauActionPerformed

    private void btn_giaoHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_giaoHangActionPerformed

        if (getSelectedHDCRow() < 0) {
            JOptionPane.showMessageDialog(this, "Hãy chọn hóa đơn chờ vận chuyển");
            return;
        }
        HoaDon hoaDonn = getSelectedHDC();
        if (hoaDonn.getTinhTrang() != 3) {
            JOptionPane.showMessageDialog(this, "Hãy chọn hóa đơn chờ vận chuyển");
            return;
        }
        if (txt_nguoiNhan.getText().isEmpty() || txt_sdtnguoiNhan.getText().isEmpty() || txt_khachTra.getText().isEmpty() || txt_diachi.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin");
            return;
        }
        try {
            Double.valueOf(txt_khachTra.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nhập đúng giá tiền");
            return;
        }
        if (Long.valueOf(txt_khachTra.getText()) >= t) {
            if (hoaDonn.getTinhTrang() != 3) {
                JOptionPane.showMessageDialog(this, "Không thể thực hiện ở hóa đơn không có trạng thái chờ giao");
            } else {
                hoaDonn.setDiaChi(txt_diachi.getText());
                updateShip(hoaDonn);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Hãy nhập đủ tiền");
        }
    }//GEN-LAST:event_btn_giaoHangActionPerformed

    private void tbl_hdcKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl_hdcKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_hdcKeyReleased

    private void rdo_shipStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdo_shipStateChanged

    }//GEN-LAST:event_rdo_shipStateChanged

    private void btn_hdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hdActionPerformed

        mainWindow.showHD();
        mainMenu.setSelectedHD();
    }//GEN-LAST:event_btn_hdActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        listSP = sv.getAllSP();
        listSP.sort((p1, p2) -> p1.getGiaBan().compareTo(p2.getGiaBan()));
        fillSP(listSP);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:       listSP = sv.getAllSP();
        listSP.sort((p1, p2) -> p2.getGiaBan().compareTo(p1.getGiaBan()));
        fillSP(listSP);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void cbo_NSXMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbo_NSXMouseClicked

    }//GEN-LAST:event_cbo_NSXMouseClicked

    private void txt_timKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_timKiemActionPerformed

    }//GEN-LAST:event_txt_timKiemActionPerformed

    private void txt_timKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_timKiemKeyReleased

        listFind.clear();
        String text = txt_timKiem.getText();
        if (text.isEmpty()) {
            fillSP(listSP);
        } else {
            for (ChiTietSp chiTietSp : listSP) {
                if (chiTietSp.getTenSp().toLowerCase().contains(text.toLowerCase())) {
                    listFind.add(chiTietSp);
                }
            }
            fillSP(listFind);
        }
    }//GEN-LAST:event_txt_timKiemKeyReleased

    private void txt_khachTraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_khachTraKeyReleased
        if (t == 0) {
            return;
        }
        String input = txt_khachTra.getText();
        if (input.isEmpty()) {
            trangthaitien.setText("Còn Thiếu:");
            lbl_thieu.setText(chuyenDoiTien(t));
        }
        long income = 0;
        try {
            income = Long.valueOf(input);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nhập sai tiền");
        }
        if (income <= t) {
            trangthaitien.setText("Còn Thiếu:");
            lbl_thieu.setText(chuyenDoiTien(t - income));
        } else {
            trangthaitien.setText("Trả lại khách:");
            lbl_thieu.setText(chuyenDoiTien(income - t));
        }

    }//GEN-LAST:event_txt_khachTraKeyReleased

    private void txt_khachTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_khachTraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_khachTraActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) tbl_ChiTietHD.getModel();
        dtm.setRowCount(0);
        listSelectedSp.clear();
        updateMoney();

    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_GiaoHang;
    private javax.swing.JButton btn_giaoHang;
    private javax.swing.JButton btn_hd;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_thanhtoan;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbo_NSX;
    private javax.swing.JComboBox<String> cbo_NhuCau;
    private javax.swing.JComboBox<String> cbo_kh;
    private javax.swing.JComboBox<String> cbo_voucher;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private com.toedter.calendar.JDateChooser jdc_NgayVanChuyen;
    private javax.swing.JLabel lbl_thieu;
    private javax.swing.JLabel lbl_tongtien;
    private javax.swing.JRadioButton rdo_ship;
    private javax.swing.JRadioButton rdo_store;
    private com.raven.swing.RoundPanel roundPanel1;
    private com.raven.swing.RoundPanel roundPanel2;
    private com.raven.swing.RoundPanel roundPanel3;
    private javax.swing.JTable tbl_ChiTietHD;
    private javax.swing.JTable tbl_chiTietSP;
    private javax.swing.JTable tbl_hdc;
    private javax.swing.JLabel trangthaitien;
    private javax.swing.JTextArea txt_diachi;
    private javax.swing.JLabel txt_giamGia;
    private javax.swing.JTextField txt_khachTra;
    private javax.swing.JLabel txt_maHD;
    private javax.swing.JTextField txt_nguoiNhan;
    private javax.swing.JLabel txt_nhanVien;
    private javax.swing.JLabel txt_outputtrangthai;
    private javax.swing.JTextField txt_sdtnguoiNhan;
    private javax.swing.JTextField txt_timKiem;
    private javax.swing.JLabel txt_tong;
    private javax.swing.JLabel txt_trangthai;
    private javax.swing.JLabel txt_trangthai1;
    private javax.swing.JLabel txt_trangthai2;
    private javax.swing.JLabel txt_trangthai3;
    private javax.swing.JLabel txt_trangthai4;
    // End of variables declaration//GEN-END:variables

    private void fillSP(List<ChiTietSp> listsp) {
        DefaultTableModel dtm = (DefaultTableModel) tbl_chiTietSP.getModel();
        dtm.setRowCount(0);
        int i = 1;
        Object[] newIdentifiers = new Object[]{"STT", "Mã SP", "Tên SP", "Năm SX", "Mô Tả", "Năm BH", "Số Lượng", "Giá Bán", "Image"};
        dtm.setColumnIdentifiers(newIdentifiers);
        tbl_chiTietSP.getColumn("STT").setMaxWidth(50);
        tbl_chiTietSP.getColumn("Mã SP").setMaxWidth(100);
        tbl_chiTietSP.getColumn("Năm SX").setMaxWidth(80);
        tbl_chiTietSP.getColumn("Số Lượng").setMaxWidth(80);
        tbl_chiTietSP.getColumn("Năm BH").setMaxWidth(80);
        tbl_chiTietSP.getColumn("Giá Bán").setMaxWidth(200);
        tbl_chiTietSP.getColumn("Image").setMaxWidth(80);
        tbl_chiTietSP.getColumn("Image").setCellRenderer(new myRender());
        for (ChiTietSp x : listsp) {
            String anh = "";
            String url = "/Image/Image Laptops/";
            if (x.getAnh() == null || x.getAnh().compareTo("null") == 0) {
                anh = "temp.png";
            } else {
                anh = x.getAnh();
            }
            url += anh;
            ImageIcon icon = new ImageIcon(getClass().getResource(url));
            Image image = icon.getImage().getScaledInstance(80, 80, Image.SCALE_SMOOTH);
            JLabel imagelbl = new JLabel();
            imagelbl.setIcon(new ImageIcon(image));
            Object[] data = new Object[]{
                i++, x.getId(), x.getTenSp(), x.getNamSx(), x.getMoTa(), x.getNamBh(), x.getSoLuongTon(), x.getGiaBan(), imagelbl
            };
            dtm.addRow(data);
        }
    }

    private void updateShip(HoaDon HDCnow) {
        HDCnow.setTenNguoiNhan(txt_nguoiNhan.getText());
        HDCnow.setSdt(txt_sdtnguoiNhan.getText());
        HDCnow.setTongTien(BigDecimal.valueOf(t));
        HDCnow.setTinhTrang(4);
        HDCnow.setVoucherHd(getSelectedVC());
        HDCnow.setNgayShip(new java.sql.Date(jdc_NgayVanChuyen.getDate().getTime()));
        if (sv.updateHDShip(HDCnow)) {
            JOptionPane.showMessageDialog(this, "Đơn hàng đã được gửi đi");
            fillHDC();
            clearForm();
        } else {
            JOptionPane.showMessageDialog(this, "Thất bại");
        }
    }

    private String getTinhTrang(int tt) {
        String tinhTrang;
        switch (tt) {
            case 0:
                tinhTrang = "Trống";
                break;
            case 2:
                tinhTrang = "Chờ thanh toán";
                break;
            case 3:
                tinhTrang = "Chờ vận chuyển";
                break;
            default:
                tinhTrang = "Đang vận chuyển";
                break;
        }
        return tinhTrang;
    }

    private void productFind() {
        listFind.clear();
        String nsx = (String) cbo_NSX.getSelectedItem();
        String dongsp = (String) cbo_NhuCau.getSelectedItem();
        if (nsx.equalsIgnoreCase("Tất cả") && dongsp.equalsIgnoreCase("Tất cả")) {
            fillSP(listSP);
            return;
        } else if (!nsx.equalsIgnoreCase("Tất cả") && dongsp.equalsIgnoreCase("Tất cả")) {
            for (ChiTietSp chiTietSp : listSP) {
                if (chiTietSp.getNsx().getTen().equalsIgnoreCase(nsx)) {
                    listFind.add(chiTietSp);
                }
            }
        } else if (nsx.equalsIgnoreCase("Tất cả") && !dongsp.equalsIgnoreCase("Tất cả")) {
            for (ChiTietSp chiTietSp : listSP) {
                if (chiTietSp.getDongSp().getTen().equalsIgnoreCase(dongsp)) {
                    listFind.add(chiTietSp);
                }
            }
        } else {
            for (ChiTietSp chiTietSp : listSP) {
                if (chiTietSp.getDongSp().getTen().equalsIgnoreCase(dongsp) && chiTietSp.getNsx().getTen().equalsIgnoreCase(nsx)) {
                    listFind.add(chiTietSp);
                }
            }
        }
        fillSP(listFind);
    }

    private void loadNSX() {
        listNSX.forEach(e -> cbo_NSX.addItem(e.getTen()));

    }

    private void loadDSP() {
        listDSP.forEach(e -> cbo_NhuCau.addItem(e.getTen()));
    }

    private void loadVoucher() {
        listVC.forEach(e -> cbo_voucher.addItem(e.getId()));
    }

    private void updateMoney() {
        DefaultTableModel dtm = (DefaultTableModel) tbl_ChiTietHD.getModel();
        String input = txt_khachTra.getText();
        long tong = 0;
        double giamGia = 0;
        for (int i = 0; i < dtm.getRowCount(); i++) {
            dtm.setValueAt(i + 1, i, 0);
            tong += Double.parseDouble(dtm.getValueAt(i, 3).toString()) * Double.parseDouble(dtm.getValueAt(i, 4).toString());
        }

        String vc = cbo_voucher.getModel().getSelectedItem().toString();
        if (vc.equalsIgnoreCase("Chưa áp dụng")) {
            txt_giamGia.setText("Chưa áp dụng");
        } else {
            VoucherHd selectedVC = listVC.get(cbo_voucher.getSelectedIndex() - 1);
            if (selectedVC.getPhanTramGiam() == 0) {
                giamGia = selectedVC.getTienGiam().doubleValue();
            } else {
                giamGia = tong / 100 * selectedVC.getPhanTramGiam();
            }
            txt_giamGia.setText(chuyenDoiTien((long) giamGia));
        }

        t = (long) (tong - giamGia);
        lbl_tongtien.setText("Tổng tiền hàng : " + chuyenDoiTien(tong));
        txt_tong.setText(chuyenDoiTien(t));
        if (input.isEmpty()) {
            trangthaitien.setText("Còn Thiếu:");
            lbl_thieu.setText(chuyenDoiTien(t));
            return;
        }
        long income = 0;
        try {
            income = Long.valueOf(input);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nhập sai tiền");
        }
        if (income <= t) {
            trangthaitien.setText("Còn Thiếu:");
            lbl_thieu.setText(chuyenDoiTien(t - income));
        } else {
            trangthaitien.setText("Trả lại khách:");
            lbl_thieu.setText(chuyenDoiTien(income - t));
        }

    }

    class myRender implements TableCellRenderer {

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            tbl_chiTietSP.setRowHeight(80);

            return (Component) value;
        }
    }

    private void loadKH() {
        cbo_kh.removeAllItems();
        DefaultComboBoxModel dcm = (DefaultComboBoxModel) cbo_kh.getModel();
        listKH = sv.getAllKH();
        listKH.forEach(e -> dcm.addElement(e));
    }

    private int getSelectedSPRow() {
        return tbl_chiTietSP.getSelectedRow();
    }

    private int getSelectedCTHDRow() {
        return tbl_ChiTietHD.getSelectedRow();
    }

    void fillSPtoHDCT() {
        int selectedRow = getSelectedSPRow();
        if (selectedRow < 0) {
            return;
        }
        ChiTietSp chiTietSp = null;
        for (ChiTietSp e : listSP) {
            if (e.getId().equalsIgnoreCase((String) tbl_chiTietSP.getValueAt(getSelectedSPRow(), 1))) {
                chiTietSp = e;
                break;
            }
        }
        if (chiTietSp.getSoLuongTon() <= 0) {
            JOptionPane.showMessageDialog(this, "Da het hang");
            return;
        }
        int sl = 0;
        do {
            String input = JOptionPane.showInputDialog(this, "Mời nhập số lượng");
            if (input == null) {
                return;
            }
            try {
                sl = Integer.valueOf(input);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Nhập Sai số lượng");
                continue;
            }
            if (sl > chiTietSp.getSoLuongTon()) {
                JOptionPane.showMessageDialog(this, "Nhập quá sl");
            }
        } while (sl > chiTietSp.getSoLuongTon() || sl <= 0);
        DefaultTableModel dtm = (DefaultTableModel) tbl_ChiTietHD.getModel();
        double giaban;
        if (chiTietSp.getVoucherLaptop() != null) {
            if (chiTietSp.getVoucherLaptop().getPhanTramGiam() == 0) {
                giaban = chiTietSp.getGiaBan().doubleValue() - chiTietSp.getVoucherLaptop().getTienGiam().doubleValue();
            } else {
                giaban = chiTietSp.getGiaBan().doubleValue() - chiTietSp.getGiaBan().doubleValue() / 100 * chiTietSp.getVoucherLaptop().getPhanTramGiam();
            }
        } else {
            giaban = chiTietSp.getGiaBan().doubleValue();
        }
        if (dtm.getRowCount() == 0 || !isExist(selectedRow)) {
            Object[] data = new Object[]{
                dtm.getRowCount() + 1, chiTietSp.getId(), chiTietSp.getTenSp(), sl, giaban, giaban * sl, true};
            dtm.addRow(data);
            listSelectedSp.add(chiTietSp);
            System.out.println("gioHang size :" + listSelectedSp.size());
        } else {
            for (int i = 0; i < dtm.getRowCount(); i++) {
                if (chiTietSp.getId().equalsIgnoreCase(dtm.getValueAt(i, 1).toString())) {
                    if (sl > chiTietSp.getSoLuongTon()) {
                        JOptionPane.showMessageDialog(this, "vuot qua so hang");
                        return;
                    }
                    dtm.setValueAt(sl, i, 3);
                    dtm.setValueAt(giaban * sl, i, 5);
                    break;
                }
            }
        }

        updateMoney();
    }

    private boolean isExist(int selectedRow) {
        DefaultTableModel dtm = (DefaultTableModel) tbl_ChiTietHD.getModel();
        ChiTietSp chiTietSp = null;
        for (ChiTietSp e : listSP) {
            if (e.getId().equalsIgnoreCase((String) tbl_chiTietSP.getValueAt(getSelectedSPRow(), 1))) {
                chiTietSp = e;
                break;
            }
        }
        for (int i = 0; i < tbl_ChiTietHD.getRowCount(); i++) {
            if (chiTietSp.getId().equalsIgnoreCase(dtm.getValueAt(i, 1).toString())) {
                System.out.println(dtm.getValueAt(i, 1).toString() + "  IS EXIST");
                return true;
            }
        }
        return false;
    }

    private void fillHDC() {
        DefaultTableModel dtm = (DefaultTableModel) tbl_hdc.getModel();
        dtm.setRowCount(0);
        listHDC = sv.getAllHDC();
        int i = 1;
        for (HoaDon x : listHDC) {

            Object[] data = new Object[]{
                x.getId() + "(" + getTinhTrang(x.getTinhTrang()) + ")"
            };
            dtm.addRow(data);
        }
    }

    private HoaDon getSelectedHDC() {
        return listHDC.get(tbl_hdc.getSelectedRow());
    }

    private void clearForm() {
        rollnumber = 1;
        DefaultTableModel dtm = (DefaultTableModel) tbl_ChiTietHD.getModel();
        dtm.setRowCount(0);
        listSP = sv.getAllSP();
        tbl_ChiTietHD.getSelectionModel().clearSelection();
        tbl_chiTietSP.getSelectionModel().clearSelection();
        txt_nguoiNhan.setText("");
        txt_sdtnguoiNhan.setText("");
        if (rdo_ship.isSelected()) {
            txt_diachi.setText("");
        } else {
            txt_diachi.setText("Tại cửa hàng");
        }
        txt_giamGia.setText("");
        txt_maHD.setText("chưa chọn hóa đơn");
        txt_outputtrangthai.setText("chưa chọn hóa đơn");
        thanhTien = 0.0;
        t = 0;
        listSelectedSp.removeAll(listSelectedSp);
        trangthaitien.setText("Còn thiếu: ");
        lbl_thieu.setText("0.0");
        txt_khachTra.setText("");
        lbl_tongtien.setText("Tổng tiền hàng : 0.0 ");
        txt_tong.setText("");

    }

    private int getSelectedHDCRow() {
        return tbl_hdc.getSelectedRow();
    }

    private void fillTextField() {
        HoaDon hd = getSelectedHDC();
        txt_diachi.setText(hd.getDiaChi());
        cbo_kh.getModel().setSelectedItem(hd.getKhachHang());
        if (hd.getTinhTrang() == 2) {
            rdo_store.setSelected(true);
            setEnabledFlase();
        } else {
            rdo_ship.setSelected(true);
            setEnabledTrue();
        }
        t = 0;
        sv.getHDCTofHD(hd).forEach(e -> t += e.getThanhTien().doubleValue());
        lbl_tongtien.setText("Tổng tiền hàng : " + chuyenDoiTien(t));
        txt_tong.setText(chuyenDoiTien(t));

    }

    private void fillHDCT(HoaDon hd) {
        DefaultTableModel dtm = (DefaultTableModel) tbl_ChiTietHD.getModel();
        int i = 1;
        dtm.setRowCount(0);
        for (Cthd x : sv.getHDCTofHD(hd)) {
            Object[] data = new Object[]{
                i++, x.getChiTietSp().getId(), x.getChiTietSp().getTenSp(), x.getSoLuong(), x.getChiTietSp().getGiaBan(), x.getThanhTien()
            };
            dtm.addRow(data);
        }
    }

    private VoucherHd getSelectedVC() {
        String vc = cbo_voucher.getModel().getSelectedItem().toString();
        if (vc.equalsIgnoreCase("Chưa áp dụng")) {
            return null;
        } else {
            return listVC.get(cbo_voucher.getSelectedIndex() - 1);
        }
    }

    private String chuyenDoiTien(long money) {
        Locale localeVN = new Locale("vi", "VN");
        NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);
        String str1 = currencyVN.format(money);
        return str1;
    }

}
